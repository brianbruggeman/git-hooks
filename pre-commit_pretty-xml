#!/usr/bin/env python
"""
Usage:
    pretty-xml <filepath>

"""
from difflib import unified_diff as differ
import os
import re
import sys
from xml.etree import cElementTree as ElementTree


def pretty_xml(filepath):
    mode = "b" if sys.platform.startswith('win') else ""
    ugly_xml_string = ""
    with open(filepath, "rU" + mode) as fd:
        ugly_xml_string = fd.read()
    patt = r'>\n\s+([^<>\s].*?)\n\s+</'
    repl = r'>\g<1></'
    pretty_xml_string = re.sub(patt, repl, ugly_xml_string, re.DOTALL)
    # remove extra whitespace
    pretty_xml_string = "\n".join(l.rstrip()
                                  for l in pretty_xml_string.split('\n')
                                  if l.strip())
    diff = list(differ(ugly_xml_string.splitlines(),
                       pretty_xml_string.splitlines(),
                       filepath, filepath))
    changed = '\n'.join(diff)
    if changed:
        xml_node = ElementTree.fromstring(pretty_xml_string)
        ms_namespace = "http://schemas.microsoft.com/developer/msbuild/2003"
        ElementTree.register_namespace('', ms_namespace)
        kwargs = dict(encoding='utf-8', method='xml', xml_declaration=True)
        xml_tree = ElementTree.ElementTree(xml_node)
        xml_tree.write(filepath, **kwargs)
        print "Beautified XML:", filepath


if __name__ == "__main__":
    import sys

    argv = sys.argv[1:] if len(sys.argv) > 1 else []
    if not argv:
        print __doc__
        sys.exit(1)
    else:
        filepath = argv[0]
        extensions_to_convert = ('vcxproj', 'vcxproj.filters', 'csproj', 'xml')
        if filepath.endswith(extensions_to_convert):
            pretty_xml(filepath)
